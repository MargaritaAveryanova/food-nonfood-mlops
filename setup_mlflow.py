import os
import mlflow

def setup_mlflow_correctly():
    """–ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ MLflow"""
    print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ MLflow...")
    
    # –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –¥–ª—è Windows
    current_dir = os.path.abspath(".")
    tracking_uri = f"file:///{current_dir.replace(':', '')}/mlruns"
    print(f"üìÅ Tracking URI: {tracking_uri}")
    
    mlflow.set_tracking_uri(tracking_uri)
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É mlruns –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    os.makedirs("mlruns", exist_ok=True)
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç
    experiment_name = "Food_Classification"
    
    try:
        # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç
        experiment = mlflow.get_experiment_by_name(experiment_name)
        if experiment is None:
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç
            experiment_id = mlflow.create_experiment(
                experiment_name,
                artifact_location=os.path.join(current_dir, "mlruns", experiment_name)
            )
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç: {experiment_name} (ID: {experiment_id})")
        else:
            print(f"‚úÖ –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {experiment_name} (ID: {experiment.experiment_id})")
            
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç
        mlflow.set_experiment(experiment_name)
        
        # –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫
        with mlflow.start_run(run_name="test_setup"):
            mlflow.log_param("test", "success")
            mlflow.log_metric("accuracy", 0.95)
            print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    setup_mlflow_correctly()